coding test??

알고리즘과 관련된 코딩 : 기본적으로 python을 기준으로!!


https://www.acmicpc.net/
대표적인 알고리즘 문제 사이트!

대체적으로 C++, python, java로 코딩테스트가 진행되는 편이라고 함

알고리즘 문제 푸는 과정에서 요구되는 요소
1. 독해력 : 문제를 빠르고 정확하게 파악하기
2. 배경지식: 필수 자료구조, 알고리즘 지식
3. 문제 해결력: 솔루션, 아이디어
4. 구현력: 코딩


시간, 메모리 제한이 있을 수 있음
1~N까지의 합을 출력하기

반복으로 1부터 N까지 더해서 합계를 출력할 경우 : N 값이 커질 수록 덧셈 횟수도 증가
하지만
N(N+1)/2로 합을 구하게 되면 (수학 공식) : N 과 무관하게 단 한 번만 수행

시간 복잡도 Time Complexity
알고리즘의 경우 최악의 상태에 걸리는 시간
입력한 데이터의 갯수에 비례하여 연산을 얼마나 많이 하는지

빅오 표기(Big-O notation)으로 시간 복잡도를 표시함
가장 크게 증가하는 항만 남겨둠 계수, 상수는 제외함
시간 복잡도는 가장 낮을 수록 알고리즘의 효율이 좋은 것

C++의 경우 1초에 1억번의 연산을 넘기면 위험

공간 복잡도 Space Complexity
메모리를 얼마나 쓰는지 나타냄
대개 메모리(공간)과 시간은 서로 한쪽이 증가하면 한쪽이 감소하는 경향이 있음

대부분의 문제는 이런식으로 제공됨
시간 제한 2초, 메모리 제한 64MB등으로!
입력 0<= N <= 100,000,000
시간 복잡도가 만약 N단위면...?
1억의 N을 넣으면 ?? integer는 4byte에 1억이므로 이를 계산하면 400MB이므로 알고리즘의 시간 복잡도가 O(N)일 경우는 해당 알고리즘의 해법을 쓸 수 없음
하지만 O(N^1/2) 루트 N이라면...? 40kb이므로 해당 알고리즘의 복잡도로는 해결 가능함

시간 제한 1초, 메모리 제한 128MB
입력 -1000<= N <= 1000


https://www.wolframalpha.com/
컴퓨터 관련 계산 시 활용

